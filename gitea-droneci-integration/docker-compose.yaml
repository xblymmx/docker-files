version: "3.6"
services:
  mysql:
    image: mysql
    container_name: bundle_mysql
    volumes:
      - mysql_data:/var/lib/mysql/
    restart: always
    networks:
      - default
    environment:
      - MYSQL_ROOT_PASSWORD=${mysql_root_password}
      - MYSQL_USER=gitea
      - MYSQL_DATABASE=gitea
      - MYSQL_PASSWORD=gitea

  gitea:
    image: gitea/gitea:latest
    container_name: bundle_gitea
    environment:
      - DB_TYPE=mysql
      - DB_HOST=mysql:3306
      - DB_NAME=gitea
      - DB_USER=gitea
      - DB_PASSWD=gitea
      - SSH_DOMAIN=${gitea_host}
      - HTTP_PORT=3000
      - REQUIRE_SIGNIN_VIEW=true
      - DISABLE_REGISTRATION=true
      - ROOT_URL=http://${gitea_host}
    volumes:
      - gitea_data:/data
    restart: always
    depends_on:
      - mysql
    networks:
      - default
    ports:
      - 30000:3000

  drone-server:
    image: drone/drone:1.2.1
    container_name: bundle_drone_server
    ports:
      - "40000:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - drone_data:/var/lib/drone
    restart: always
    environment:
      - DRONE_GITEA_SERVER=http://${gitea_host}
      - DRONE_GITEA_CLIENT_ID=${client_id}
      - DRONE_GITEA_CLIENT_SECRET=${client_secret}
      - DRONE_SERVER_HOST=${drone_host}
      - DRONE_RPC_SECRET=${drone_rpc_secret}
      - DRONE_AGENTS_ENABLED=true
      - DRONE_GIT_ALWAYS_AUTH=true
      - DRONE_RUNNER_CAPACITY=2
      - DRONE_SERVER_PROTO=http
      - DRONE_TLS_AUTOCERT=false
      - DRONE_LOGS_DEBUG=true
    depends_on:
      - gitea
    restart: always
    networks:
      - default

  drone-runner:
    image: drone/drone-runner-docker
    container_name: bundle_drone_runner
    command: agent
    restart: always
    depends_on:
      - drone-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_RPC_PROTO=http
      - DRONE_RPC_SECRET=${drone_rpc_secret}
      - DRONE_RUNNER_CAPACITY=2
      - DRONE_RPC_HOST=drone-server
      # - DRONE_RPC_HOST=${drone_host}
      # - http_proxy=${http_proxy}
      # - https_proxy=${http_proxy}
    restart: always
    networks:
      - default

networks:
  default:

volumes:
  mysql_data:
  gitea_data:
  drone_data: